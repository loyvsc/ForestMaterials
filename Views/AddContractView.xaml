<Window x:Class="BuildMaterials.Views.AddContractView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:viewmodels="clr-namespace:BuildMaterials.ViewModels"
        mc:Ignorable="d" SizeToContent="Height" MinWidth="250"
        Title="Новый договор" Width="250" WindowStartupLocation="CenterScreen">
    <Window.DataContext>
        <viewmodels:AddContractViewModel/>
    </Window.DataContext>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="30"/>
        </Grid.RowDefinitions>
        <StackPanel Orientation="Vertical" Margin="5,5,5,5">
            <TextBlock Margin="0,5,0,0">Дата</TextBlock>
            <DatePicker SelectedDate="{Binding Contract.Date}"/>

            <TextBlock Margin="0,5,0,0">Условия доставки</TextBlock>
            <ComboBox ItemsSource="{Binding LogisticsTypes}"
                      SelectedValue="{Binding Contract.LogisiticsType, UpdateSourceTrigger=PropertyChanged}"/>

            <TextBlock Margin="0,5,0,0">Продавец</TextBlock>
            <ComboBox ItemsSource="{Binding OrganizationsList}"
                      SelectedValuePath="ID"
                      SelectedValue="{Binding Contract.SellerID, UpdateSourceTrigger=PropertyChanged}" 
                      DisplayMemberPath="CompanyName"/>

            <CheckBox x:Name="isBuyerIdv"/>
            <TextBlock Margin="0,5,0,0" Text="Покупатель"/>
            <ComboBox ItemsSource="{Binding OrganizationsList}"
                      SelectedValuePath="ID"
                      SelectedValue="{Binding Contract.BuyerID, UpdateSourceTrigger=PropertyChanged}" 
                      DisplayMemberPath="CompanyName">
                <ComboBox.Style>
                    <Style TargetType="{x:Type ComboBox}">
                        <Setter Property="Visibility" Value="Visible"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Path=IsChecked, ElementName=isBuyerIdv}" Value="False">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Path=IsChecked, ElementName=isBuyerIdv}" Value="True">
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ComboBox.Style>
            </ComboBox>
            <ComboBox ItemsSource="{Binding Individuals}"
                      SelectedItem="{Binding Contract.Individual, UpdateSourceTrigger=PropertyChanged}" 
                      DisplayMemberPath="FIO">
                <ComboBox.Style>
                    <Style TargetType="{x:Type ComboBox}">
                        <Setter Property="Visibility" Value="Collapsed"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Path=IsChecked, ElementName=isBuyerIdv}" Value="False">
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Path=IsChecked, ElementName=isBuyerIdv}" Value="True">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ComboBox.Style>
            </ComboBox>

            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="25px"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <StackPanel Orientation="Horizontal">
                    <Button Content="add" Width="25" Command="{Binding AddMaterialCommand}"/>
                    <Button Content="edit" Width="25" Command="{Binding EditMaterialCommand}"/>
                    <Button Content="del" Width="25" Command="{Binding DeleteMaterialCommand}"/>
                </StackPanel>
                <DataGrid ItemsSource="{Binding Contract.Materials,UpdateSourceTrigger=PropertyChanged}"
                          CanUserAddRows="False" CanUserDeleteRows="False"
                          AutoGenerateColumns="False" x:Name="materialsDataGrid" Grid.Row="1">
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="Товар" Binding="{Binding Material.Name}" MinWidth="20"/>
                        <DataGridTextColumn Header="Количество" Binding="{Binding Count}" MinWidth="20"/>
                    </DataGrid.Columns>
                </DataGrid>
            </Grid>
        </StackPanel>
        <StackPanel Orientation="Horizontal" Grid.Row="1" HorizontalAlignment="Center">
            <Button Grid.Row="1" Margin="5,0,5,5" MinWidth="75" Command="{Binding AddCommand}">Добавить</Button>
            <Button Grid.Row="1" Margin="5,0,5,5" MinWidth="75" Command="{Binding CancelCommand}">Отмена</Button>
        </StackPanel>
    </Grid>
</Window>